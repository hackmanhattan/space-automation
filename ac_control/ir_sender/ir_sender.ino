#include <IRremote.hpp> // IRremote 4.1.2 from Library Manager

unsigned long period = 7200000;
unsigned long last_trigger = 0;

//4467 4347 608 1542 609 493 582 1568 582 493 582 493 582 493 582 493 582 1568 582 1568 583 493 582 493 582 1570 581 1570 581 495 580 1571 580 1571 580 495 580 1571 580 1571 580 495 580 1571 580 1571 580 495 581 1571 579 1571 580 1571 580 1571 580 1571 580 1571 580 1571 580 1571 580 1571 580 1572 579 1571 580 1571 580 1571 580 1571 580 1572 579 1571 580 1572 579 496 579 1572 579 1572 579 1572 579 496 579 1572 579 1572 579 1572 580 5167 4439 4377 579 496 579 1572 579 497 578 1572 579 1572 579 1572 579 1573 578 497 578 497 578 1573 578 1573 578 497 578 497 578 1573 578 497 578 497 578 1573 578 497 578 497 578 1573 578 497 578 498 577 1573 578 498 577 498 577 498 577 498 577 498 577 498 577 498 577 499 576 522 553 522 554 522 553 522 553 522 553 522 553 522 553 522 553 522 553 1598 553 522 553 522 554 522 553 1598 553 522 553 522 553 522 553
uint16_t on_code[199] = {0x1173, 0x10fb, 0x260, 0x606, 0x261, 0x1ed, 0x246, 0x620, 0x246, 0x1ed, 0x246, 0x1ed, 0x246, 0x1ed, 0x246, 0x1ed, 0x246, 0x620, 0x246, 0x620, 0x247, 0x1ed, 0x246, 0x1ed, 0x246, 0x622, 0x245, 0x622, 0x245, 0x1ef, 0x244, 0x623, 0x244, 0x623, 0x244, 0x1ef, 0x244, 0x623, 0x244, 0x623, 0x244, 0x1ef, 0x244, 0x623, 0x244, 0x623, 0x244, 0x1ef, 0x245, 0x623, 0x243, 0x623, 0x244, 0x623, 0x244, 0x623, 0x244, 0x623, 0x244, 0x623, 0x244, 0x623, 0x244, 0x623, 0x244, 0x623, 0x244, 0x624, 0x243, 0x623, 0x244, 0x623, 0x244, 0x623, 0x244, 0x623, 0x244, 0x624, 0x243, 0x623, 0x244, 0x624, 0x243, 0x1f0, 0x243, 0x624, 0x243, 0x624, 0x243, 0x624, 0x243, 0x1f0, 0x243, 0x624, 0x243, 0x624, 0x243, 0x624, 0x244, 0x142f, 0x1157, 0x1119, 0x243, 0x1f0, 0x243, 0x624, 0x243, 0x1f1, 0x242, 0x624, 0x243, 0x624, 0x243, 0x624, 0x243, 0x625, 0x242, 0x1f1, 0x242, 0x1f1, 0x242, 0x625, 0x242, 0x625, 0x242, 0x1f1, 0x242, 0x1f1, 0x242, 0x625, 0x242, 0x1f1, 0x242, 0x1f1, 0x242, 0x625, 0x242, 0x1f1, 0x242, 0x1f1, 0x242, 0x625, 0x242, 0x1f1, 0x242, 0x1f2, 0x241, 0x625, 0x242, 0x1f2, 0x241, 0x1f2, 0x241, 0x1f2, 0x241, 0x1f2, 0x241, 0x1f2, 0x241, 0x1f2, 0x241, 0x1f2, 0x241, 0x1f3, 0x240, 0x20a, 0x229, 0x20a, 0x22a, 0x20a, 0x229, 0x20a, 0x229, 0x20a, 0x229, 0x20a, 0x229, 0x20a, 0x229, 0x20a, 0x229, 0x20a, 0x229, 0x63e, 0x229, 0x20a, 0x229, 0x20a, 0x22a, 0x20a, 0x229, 0x63e, 0x229, 0x20a, 0x229, 0x20a, 0x229, 0x20a, 0x229};

uint16_t temp_code[199] = {0x1113, 0x1176, 0x207, 0x655, 0x207, 0x20b, 0x207, 0x655, 0x207, 0x654, 0x208, 0x20b, 0x208, 0x20b, 0x207, 0x654, 0x206, 0x20d, 0x207, 0x20d, 0x206, 0x655, 0x207, 0x20c, 0x207, 0x20d, 0x207, 0x654, 0x207, 0x655, 0x206, 0x20e, 0x206, 0x654, 0x207, 0x20c, 0x207, 0x20b, 0x208, 0x656, 0x206, 0x654, 0x207, 0x655, 0x207, 0x654, 0x207, 0x655, 0x207, 0x653, 0x207, 0x656, 0x207, 0x655, 0x207, 0x20c, 0x207, 0x20d, 0x207, 0x20d, 0x207, 0x20c, 0x208, 0x20d, 0x207, 0x20b, 0x208, 0x20d, 0x207, 0x20c, 0x207, 0x20c, 0x208, 0x20d, 0x208, 0x654, 0x207, 0x654, 0x208, 0x20e, 0x205, 0x20c, 0x208, 0x655, 0x207, 0x655, 0x207, 0x654, 0x207, 0x656, 0x206, 0x20b, 0x208, 0x20d, 0x207, 0x655, 0x206, 0x654, 0x207, 0x1470, 0x10fa, 0x1173, 0x206, 0x655, 0x207, 0x20b, 0x208, 0x656, 0x207, 0x655, 0x207, 0x20c, 0x208, 0x20d, 0x206, 0x655, 0x207, 0x20d, 0x206, 0x20e, 0x206, 0x656, 0x206, 0x20c, 0x207, 0x20c, 0x207, 0x657, 0x206, 0x655, 0x207, 0x20b, 0x207, 0x654, 0x207, 0x20d, 0x206, 0x20d, 0x207, 0x654, 0x207, 0x655, 0x207, 0x654, 0x207, 0x656, 0x206, 0x653, 0x207, 0x656, 0x206, 0x655, 0x207, 0x655, 0x206, 0x20d, 0x206, 0x20d, 0x206, 0x20d, 0x206, 0x20d, 0x206, 0x20d, 0x206, 0x20d, 0x206, 0x20d, 0x206, 0x20d, 0x206, 0x20d, 0x206, 0x20c, 0x207, 0x656, 0x206, 0x655, 0x206, 0x20d, 0x206, 0x20c, 0x206, 0x656, 0x206, 0x655, 0x206, 0x655, 0x208, 0x656, 0x207, 0x20d, 0x206, 0x20c, 0x207, 0x657, 0x206, 0x655, 0x207};

//4468 4347 608 1543 609 467 608 1541 610 493 582 492 582 493 582 493 582 1544 607 493 581 494 580 495 580 1571 580 1571 580 495 580 1571 580 1571 580 496 579 1572 579 1571 580 495 580 1571 580 1571 580 495 580 1571 580 1572 579 1571 580 1571 580 1571 579 1572 579 1571 580 1571 580 1572 579 1571 580 1571 580 1571 580 1571 580 1572 579 1571 580 1571 580 1571 580 1571 580 1571 580 1571 580 1572 579 496 579 1572 579 1572 579 1572 579 5166 4439 4376 579 496 579 1572 579 496 579 1572 579 1572 579 1572 579 1572 579 496 579 1572 579 1572 579 1572 579 496 579 497 579 1572 579 496 579 496 579 1572 579 496 579 496 579 1572 579 496 579 497 578 1573 578 497 578 497 578 497 578 497 578 496 579 497 578 497 578 497 578 497 578 497 578 497 578 497 578 497 578 497 578 497 578 497 578 497 578 497 578 497 578 497 579 497 578 1573 578 497 579 497 579 497 578
uint16_t off_code[] = {0x2301, 0x11a8, 0x27e, 0x237, 0x27f, 0x684, 0x27f, 0x685, 0x27f, 0x239, 0x27d, 0x684, 0x27f, 0x686, 0x27e, 0x237, 0x27f, 0x237, 0x27f, 0x685, 0x27f, 0x685, 0x27e, 0x238, 0x27e, 0x239, 0x27d, 0x239, 0x27d, 0x238, 0x27e, 0x238, 0x27e, 0x239, 0x27d, 0x238, 0x27e, 0x23a, 0x27c, 0x237, 0x27f, 0x238, 0x27e, 0x238, 0x27e, 0x684, 0x27f, 0x236, 0x280, 0x239, 0x27c, 0x238, 0x27e, 0x237, 0x27f, 0x687, 0x27d, 0x684, 0x27f, 0x685, 0x27f, 0x237, 0x27f, 0x685, 0x27e, 0x236, 0x280, 0x237, 0x27f, 0x685, 0x27e, 0x253, 0x263, 0x4e21, 0x27f, 0x236, 0x27f, 0x237, 0x27f, 0x235, 0x281, 0x253, 0x263, 0x235, 0x281, 0x236, 0x280, 0x238, 0x27f, 0x236, 0x280, 0x237, 0x27f, 0x236, 0x280, 0x236, 0x280, 0x236, 0x27f, 0x236, 0x280, 0x236, 0x280, 0x236, 0x27f, 0x683, 0x280, 0x235, 0x281, 0x237, 0x27f, 0x236, 0x280, 0x236, 0x280, 0x238, 0x27f, 0x237, 0x27f, 0x238, 0x27e, 0x235, 0x281, 0x235, 0x281, 0x235, 0x281, 0x237, 0x27f, 0x237, 0x27f, 0x684, 0x27f, 0x685, 0x27f, 0x687, 0x27c, 0x237, 0x27f, 0x9c48, 0x2302, 0x11aa, 0x27d, 0x237, 0x27f, 0x685, 0x27f, 0x684, 0x27f, 0x235, 0x281, 0x684, 0x280, 0x685, 0x27e, 0x237, 0x27f, 0x238, 0x27e, 0x684, 0x27f, 0x682, 0x281, 0x237, 0x27f, 0x237, 0x27f, 0x236, 0x27f, 0x236, 0x280, 0x237, 0x27f, 0x238, 0x27e, 0x237, 0x27f, 0x236, 0x280, 0x237, 0x27f, 0x237, 0x27f, 0x236, 0x280, 0x684, 0x27f, 0x237, 0x27f, 0x237, 0x27f, 0x236, 0x280, 0x236, 0x280, 0x682, 0x281, 0x685, 0x27e, 0x236, 0x280, 0x684, 0x27f, 0x685, 0x27e, 0x237, 0x27f, 0x237, 0x27f, 0x686, 0x27e, 0x237, 0x27f, 0x4e25, 0x27e, 0x23a, 0x27c, 0x237, 0x27f, 0x238, 0x27e, 0x237, 0x27f, 0x239, 0x27d, 0x239, 0x27d, 0x238, 0x27e, 0x236, 0x280, 0x238, 0x27d, 0x237, 0x27f, 0x237, 0x27f, 0x237, 0x27f, 0x239, 0x27d, 0x236, 0x280, 0x238, 0x27e, 0x237, 0x27e, 0x236, 0x280, 0x237, 0x27e, 0x237, 0x27f, 0x236, 0x280, 0x237, 0x27f, 0x238, 0x27e, 0x237, 0x27f, 0x238, 0x27e, 0x237, 0x27f, 0x237, 0x27f, 0x237, 0x27f, 0x238, 0x27e, 0x685, 0x27e, 0x685, 0x27f, 0x685, 0x27f, 0x687, 0x27c, 0x9c4c, 0x2301, 0x11a7, 0x27e, 0x237, 0x27e, 0x685, 0x27f, 0x685, 0x27e, 0x238, 0x27e, 0x684, 0x280, 0x686, 0x27d, 0x239, 0x27d, 0x238, 0x27e, 0x6a1, 0x261, 0x685, 0x27e, 0x237, 0x27f, 0x237, 0x27f, 0x236, 0x280, 0x238, 0x27e, 0x236, 0x280, 0x237, 0x27f, 0x238, 0x27e, 0x237, 0x27f, 0x238, 0x27e, 0x237, 0x27f, 0x237, 0x27f, 0x685, 0x27f, 0x237, 0x27f, 0x237, 0x27f, 0x237, 0x27f, 0x236, 0x280, 0x684, 0x27f, 0x684, 0x27f, 0x684, 0x27f, 0x683, 0x280, 0x685, 0x27e, 0x238, 0x27e, 0x236, 0x27f, 0x685, 0x27f, 0x238, 0x27e, 0x4e21, 0x280, 0x236, 0x280, 0x235, 0x281, 0x237, 0x27f, 0x237, 0x27f, 0x236, 0x280, 0x236, 0x280, 0x237, 0x27f, 0x237, 0x27f, 0x238, 0x27e, 0x237, 0x27f, 0x237, 0x27f, 0x237, 0x27f, 0x237, 0x280, 0x237, 0x27f, 0x236, 0x280, 0x235, 0x280, 0x237, 0x27f, 0x236, 0x280, 0x236, 0x280, 0x236, 0x280, 0x685, 0x27f, 0x238, 0x27e, 0x684, 0x280, 0x683, 0x280, 0x237, 0x27f, 0x237, 0x27f, 0x236, 0x280, 0x237, 0x27f, 0x236, 0x280, 0x236, 0x280, 0x685, 0x27e, 0x684, 0x27f, 0x9c4c, 0x22ff, 0x11a6, 0x280, 0x237, 0x27f, 0x236, 0x280, 0x237, 0x27f, 0x238, 0x27e, 0x237, 0x27f, 0x239, 0x27d, 0x23a, 0x27c, 0x237, 0x27f, 0x237, 0x27f, 0x236, 0x280, 0x238, 0x27e, 0x237, 0x27f, 0x238, 0x27e, 0x237, 0x27f, 0x237, 0x27f, 0x236, 0x280, 0x237, 0x27e, 0x239, 0x27d, 0x238, 0x27e, 0x238, 0x27e, 0x237, 0x27f, 0x238, 0x27e, 0x236, 0x280, 0x237, 0x27f, 0x237, 0x27f, 0x237, 0x27f, 0x236, 0x280, 0x684, 0x280, 0x236, 0x280, 0x684, 0x280, 0x237, 0x27f, 0x686, 0x27e, 0x236, 0x280, 0x684, 0x27f, 0x235, 0x281, 0x4e20, 0x280, 0x237, 0x27f, 0x238, 0x27e, 0x236, 0x280, 0x238, 0x27e, 0x237, 0x27f, 0x237, 0x27f, 0x237, 0x27f, 0x237, 0x27f, 0x238, 0x27e, 0x237, 0x27f, 0x238, 0x27e, 0x235, 0x281, 0x237, 0x27f, 0x237, 0x27f, 0x239, 0x27d, 0x253, 0x262, 0x235, 0x280, 0x238, 0x27e, 0x238, 0x27d, 0x237, 0x27e, 0x236, 0x280, 0x237, 0x27f, 0x237, 0x27f, 0x237, 0x27f, 0x238, 0x27e, 0x236, 0x280, 0x238, 0x27e, 0x239, 0x27d, 0x237, 0x27e, 0x687, 0x27c, 0x237, 0x27e, 0x238, 0x27e};
void setup() {
  pinMode (1, OUTPUT);
  Serial.begin(9600); // does serial need to be open?
  IrSender.begin(1);
  IrSender.sendRaw(off_code, sizeof(off_code)/sizeof(off_code[0]), 38);
}

void loop() {
  // due to unsigned math being modulo, this period math still works when it wraps around after 50 days
  if ((unsigned long)(millis() - last_trigger) > period) {
    Serial.println("turning off");
    IrSender.sendRaw(off_code, sizeof(off_code)/sizeof(off_code[0]), 38);
    last_trigger = millis();
  }
}
